name: Build & Push Docker Images

on:
  push:
    branches:
      - master

env:
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
  TEAMS_WEBHOOK: ${{ secrets.TEAMS_WEBHOOK }}

jobs:
  # 1️⃣ Customers
  build-customers:
    runs-on: ubuntu-latest
    steps:
      - name: 🛎️ Checkout code
        uses: actions/checkout@v3

      - name: 🔐 Docker Login
        run: |
          echo "${{ env.DOCKERHUB_PASSWORD }}" | docker login -u "${{ env.DOCKERHUB_USERNAME }}" --password-stdin

      - name: 📦 Build & Push Customers
        run: |
          docker build -t ${{ env.DOCKERHUB_USERNAME }}/customers:latest ./customers
          docker push ${{ env.DOCKERHUB_USERNAME }}/customers:latest

  # 2️⃣ Orders
  build-orders:
    runs-on: ubuntu-latest
    steps:
      - name: 🛎️ Checkout code
        uses: actions/checkout@v3

      - name: 🔐 Docker Login
        run: |
          echo "${{ env.DOCKERHUB_PASSWORD }}" | docker login -u "${{ env.DOCKERHUB_USERNAME }}" --password-stdin

      - name: 📦 Build & Push Orders
        run: |
          docker build -t ${{ env.DOCKERHUB_USERNAME }}/orders:latest ./orders
          docker push ${{ env.DOCKERHUB_USERNAME }}/orders:latest

  # 3️⃣ Products
  build-products:
    runs-on: ubuntu-latest
    steps:
      - name: 🛎️ Checkout code
        uses: actions/checkout@v3

      - name: 🔐 Docker Login
        run: |
          echo "${{ env.DOCKERHUB_PASSWORD }}" | docker login -u "${{ env.DOCKERHUB_USERNAME }}" --password-stdin

      - name: 📦 Build & Push Products
        run: |
          docker build -t ${{ env.DOCKERHUB_USERNAME }}/products:latest ./products
          docker push ${{ env.DOCKERHUB_USERNAME }}/products:latest

  # ✅ 4️⃣ Notification Teams
  notify-teams:
    runs-on: ubuntu-latest
    needs: [build-customers, build-orders, build-products]
    if: success()

    steps:
      - name: 📣 Envoyer notification Teams
        run: |
          curl -H "Content-Type: application/json" \
               -d '{
                 "@type": "MessageCard",
                 "@context": "http://schema.org/extensions",
                 "summary": "Déploiement réussi",
                 "title": "🚀 Nouveau déploiement terminé",
                 "text": "Les images Docker des microservices (Customers, Orders, Products) sont prêtes sur Docker Hub."
               }' \
               "${{ env.TEAMS_WEBHOOK }}"
